{
  "openapi": "3.0.1",
  "info": {
    "title": "Next REST Framework",
    "description": "This is an autogenerated documentation by Next REST Framework.",
    "version": "v4.1.2"
  },
  "paths": {
    "/api/auth/check": {
      "options": {
        "operationId": "_checkOptions",
        "responses": {
          "200": {
            "description": "Response for status 200",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/_checkOptions200ResponseBody"
                }
              }
            }
          },
          "500": {
            "description": "An unknown error occurred, trying again might help.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnexpectedError" }
              }
            }
          }
        },
        "tags": ["_options"]
      },
      "post": {
        "operationId": "checkRole",
        "responses": {
          "200": {
            "description": "Response for status 200",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckRole200ResponseBody"
                }
              }
            }
          },
          "500": {
            "description": "An unknown error occurred, trying again might help.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnexpectedError" }
              }
            }
          }
        },
        "description": "Requires the \"Authorization\" header to have a valid token",
        "tags": ["auth"]
      }
    },
    "/api/auth/check/{role}": {
      "options": {
        "operationId": "_checkRoleOptions",
        "responses": {
          "200": {
            "description": "Response for status 200",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/_checkRoleOptions200ResponseBody"
                }
              }
            }
          },
          "500": {
            "description": "An unknown error occurred, trying again might help.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnexpectedError" }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "tags": ["_options"]
      },
      "post": {
        "operationId": "hasRole",
        "responses": {
          "200": {
            "description": "Response for status 200",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HasRole200ResponseBody"
                }
              }
            }
          },
          "403": {
            "description": "Response for status 403",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HasRole403ResponseBody"
                }
              }
            }
          },
          "500": {
            "description": "An unknown error occurred, trying again might help.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnexpectedError" }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "description": "Requires the \"Authorization\" header to have a valid token",
        "tags": ["auth"]
      }
    },
    "/api/auth/login": {
      "options": {
        "operationId": "_loginOptions",
        "responses": {
          "200": {
            "description": "Response for status 200",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/_loginOptions200ResponseBody"
                }
              }
            }
          },
          "500": {
            "description": "An unknown error occurred, trying again might help.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnexpectedError" }
              }
            }
          }
        },
        "tags": ["_options"]
      },
      "post": {
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginRequestBody" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response for status 200",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Login200ResponseBody"
                }
              }
            }
          },
          "401": {
            "description": "Response for status 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Login401ResponseBody"
                }
              }
            }
          },
          "500": {
            "description": "An unknown error occurred, trying again might help.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnexpectedError" }
              }
            }
          }
        },
        "tags": ["auth"]
      }
    },
    "/api/codes": {
      "options": {
        "operationId": "_codesOptions",
        "responses": {
          "200": {
            "description": "Response for status 200",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/_codesOptions200ResponseBody"
                }
              }
            }
          },
          "500": {
            "description": "An unknown error occurred, trying again might help.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnexpectedError" }
              }
            }
          }
        },
        "tags": ["_options"]
      },
      "get": {
        "operationId": "getCodes",
        "responses": {
          "200": {
            "description": "Response for status 200",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCodes200ResponseBody"
                }
              }
            }
          },
          "403": {
            "description": "Response for status 403",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetCodes403ResponseBody"
                }
              }
            }
          },
          "500": {
            "description": "An unknown error occurred, trying again might help.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnexpectedError" }
              }
            }
          }
        },
        "description": "Requires the \"Authorization\" header to have a valid token",
        "tags": ["codes"]
      },
      "post": {
        "operationId": "createCode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateCodeRequestBody" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response for status 200",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCode200ResponseBody"
                }
              }
            }
          },
          "403": {
            "description": "Response for status 403",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCode403ResponseBody"
                }
              }
            }
          },
          "500": {
            "description": "An unknown error occurred, trying again might help.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnexpectedError" }
              }
            }
          }
        },
        "description": "Requires the \"Authorization\" header to have a valid token",
        "tags": ["codes"]
      },
      "put": {
        "operationId": "createManyCodes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateManyCodesRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response for status 200",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateManyCodes200ResponseBody"
                }
              }
            }
          },
          "403": {
            "description": "Response for status 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateManyCodes403ResponseBody"
                }
              }
            }
          },
          "500": {
            "description": "An unknown error occurred, trying again might help.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnexpectedError" }
              }
            }
          }
        },
        "description": "Requires the \"Authorization\" header to have a valid token",
        "tags": ["codes"]
      },
      "delete": {
        "operationId": "deleteCode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DeleteCodeRequestBody" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response for status 200",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCode200ResponseBody"
                }
              }
            }
          },
          "403": {
            "description": "Response for status 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCode403ResponseBody"
                }
              }
            }
          },
          "500": {
            "description": "An unknown error occurred, trying again might help.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnexpectedError" }
              }
            }
          }
        },
        "description": "Requires the \"Authorization\" header to have a valid token",
        "tags": ["codes"]
      }
    }
  },
  "components": {
    "schemas": {
      "CheckRole200ResponseBody": {
        "type": "object",
        "properties": {
          "role": { "type": "string", "enum": ["user", "admin"] }
        },
        "additionalProperties": false
      },
      "CreateCode200ResponseBody": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "timesUsed": { "type": "number" },
          "value": { "type": "string" }
        },
        "required": ["id", "timesUsed", "value"],
        "additionalProperties": false
      },
      "CreateCode403ResponseBody": { "type": "string" },
      "CreateCodeRequestBody": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "minLength": 8,
            "maxLength": 8,
            "pattern": "^\\w+$"
          }
        },
        "required": ["code"],
        "additionalProperties": false
      },
      "CreateManyCodes200ResponseBody": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": { "type": "number" },
            "timesUsed": { "type": "number" },
            "value": { "type": "string" }
          },
          "required": ["id", "timesUsed", "value"],
          "additionalProperties": false
        }
      },
      "CreateManyCodes403ResponseBody": { "type": "string" },
      "CreateManyCodesRequestBody": {
        "type": "object",
        "properties": {
          "codes": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "pattern": "^\\w+$"
            }
          }
        },
        "required": ["codes"],
        "additionalProperties": false
      },
      "DeleteCode200ResponseBody": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "timesUsed": { "type": "number" },
          "value": { "type": "string" }
        },
        "required": ["id", "timesUsed", "value"],
        "additionalProperties": false
      },
      "DeleteCode403ResponseBody": { "type": "string" },
      "DeleteCodeRequestBody": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "minLength": 8,
            "maxLength": 8,
            "pattern": "^\\w+$"
          }
        },
        "required": ["code"],
        "additionalProperties": false
      },
      "GetCodes200ResponseBody": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": { "type": "number" },
            "timesUsed": { "type": "number" },
            "value": { "type": "string" }
          },
          "required": ["id", "timesUsed", "value"],
          "additionalProperties": false
        }
      },
      "GetCodes403ResponseBody": { "type": "string" },
      "HasRole200ResponseBody": { "type": "string" },
      "HasRole403ResponseBody": { "type": "string" },
      "Login200ResponseBody": {
        "type": "object",
        "properties": {
          "token": { "type": "string" },
          "role": { "type": "string", "enum": ["user", "admin"] }
        },
        "required": ["token", "role"],
        "additionalProperties": false
      },
      "Login401ResponseBody": { "type": "string" },
      "LoginRequestBody": {
        "type": "object",
        "properties": { "code": { "type": "string" } },
        "required": ["code"],
        "additionalProperties": false
      },
      "UnexpectedError": {
        "type": "object",
        "properties": { "message": { "type": "string" } },
        "additionalProperties": false
      },
      "_checkOptions200ResponseBody": { "type": "string" },
      "_checkRoleOptions200ResponseBody": { "type": "string" },
      "_codesOptions200ResponseBody": { "type": "string" },
      "_loginOptions200ResponseBody": { "type": "string" }
    }
  }
}
